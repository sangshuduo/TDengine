#
# Configuration
#
#language: c

#
# Build Matrix
#
matrix:
  - os: linux
    language: c

    git:
      - depth: 1

    compiler: gcc

    addons:
      apt:
        packages:
          - build-essential
          - cmake
          - net-tools
          - python-pip
          - python-setuptools
          - python3-pip
          - python3-setuptools

            #    before_install:
            #      - sudo apt -y -qq update
            #      - sudo apt -y install python-pip python3-pip python-setuptools python3-setuptools

    before_script:
      - cd ${TRAVIS_BUILD_DIR}
      - mkdir debug
      - cd debug

    script:
      - cmake ..
      - make

    after_success:
      - |-
        case $TRAVIS_OS_NAME in
          linux)
          cd ${TRAVIS_BUILD_DIR}/debug
          sudo make install || exit $?
  
          pip install --user ../../src/connector/python/linux/python2/ 
          pip3 install --user ../../src/connector/python/linux/python3/ 
  
          cd tests
          bash ./test-all.sh

          if [ "$?" -ne "0"]; then
            exit $?
          fi

          ;;
        esac

  - os: linux
    language: c
    compiler: gcc
    env: COVERITY_SCAN=true
    git:
      - depth: 1

    script:
      - echo "this job is for coverity scan"

    addons:
      coverity_scan:
    
        # GitHub project metadata
        # ** specific to your project **
        project:
          name: TDengine
          version: 2.x
          description: sangshuduo/TDengine
    
        # Where email notification of build analysis results will be sent
        notification_email: sangshuduo@gmail.com
    
        # Commands to prepare for build_command
        # ** likely specific to your build **
        build_command_prepend: cmake ..
    
        # The command that will be added as an argument to "cov-build" to compile your project for analysis,
        # ** likely specific to your build **
        build_command: cmake --build .
    
        # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
        # Take care in resource usage, and consider the build frequency allowances per
        #   https://scan.coverity.com/faq#frequency
        branch_pattern: coverity_scan

  - os: linux
    language: c
    compiler: gcc
    env: ENV_COVER=true

    git:
      - depth: 1

    addons:
      apt:
        packages:
          - build-essential
          - cmake
          - net-tools
          - python-pip
          - python-setuptools
          - python3-pip
          - python3-setuptools
          - lcov

    before_script:
      - cd ${TRAVIS_BUILD_DIR}
      - mkdir debug
      - cd debug

    script:
      - cmake -DCOVER=true ..
      - make

  - os: linux
    language: c
    compiler: clang
    git:
      - depth: 1

    addons:
      apt:
        packages:
          - build-essential
          - cmake

    before_script:
      - cd ${TRAVIS_BUILD_DIR}
      - mkdir debug
      - cd debug

    script:
      - cmake ..
      - make

        #  - os: osx
        #    language: c
        #    compiler: clang
        #    git:
        #      - depth: 1
        #    addons:
        #      homebrew:
        #        - cmake
        #
        #    before_script:
        #      - cd ${TRAVIS_BUILD_DIR}
        #      - mkdir debug
        #      - cd debug
        #  - os: osx
        #    compiler: clang
        #    git:
        #      - depth: 1
        #    addons:
        #      homebrew:
        #        - cmake
        #
        #    before_script:
        #      - cd ${TRAVIS_BUILD_DIR}
        #      - mkdir debug
        #      - cd debug
        #
        #    script:
        #      - cmake ..
        #      - make
